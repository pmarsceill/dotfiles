""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""" PLUGINS """"""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

filetype off

" Auto-install plug.vim
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

" Use shallow clone for plugins
let g:plug_shallow = 1

call plug#begin('~/.vim/plugged')

" Load matchit.vim, but only if the user hasn't installed a newer version.
if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

" GENERAL
"-----------------------------------------------------------------------------

Plug 'Shougo/vimproc.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install' }
Plug 'junegunn/fzf.vim', { 'on': ['Ag', 'Buffers', 'Colors', 'Commands',
      \ 'Commits', 'BCommits', 'Files', 'GitFiles', 'Helptags', 'History',
      \ 'Lines', 'BLines', 'Locate', 'Maps', 'Marks', 'Snippets', 'Tags',
      \ 'BTags', 'Windows'] }                                                   " Fuzzy finder
Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }    " Align stuff interactively
Plug 'scrooloose/nerdtree', { 'on': ['NERDTreeToggle'] }                        " File navigation (:h nerdtree)
Plug 'tpope/vim-repeat'                                                         " Repeat tpope plugin commands with . (:h repeat)
Plug 'mhinz/vim-sayonara', { 'on': ['Sayonara'] }                               " Sane buffer closing (:h sayonara)
Plug 'tmux-plugins/vim-tmux-focus-events'                                       " Enable tmux focus event hooks
Plug 'christoomey/vim-tmux-navigator'                                           " Navigate Vim windows like tmux windows
Plug 'reedes/vim-wheel'                                                         " Screen-anchored cursor movement (:h wheel)
Plug 'kana/vim-textobj-user' | Plug 'thinca/vim-textobj-between'
Plug 'kana/vim-textobj-user' | Plug 'Julian/vim-textobj-brace'
Plug 'kana/vim-textobj-user' | Plug 'glts/vim-textobj-comment'
Plug 'kana/vim-textobj-user' | Plug 'kana/vim-textobj-datetime'
Plug 'kana/vim-textobj-user' | Plug 'kana/vim-textobj-entire'
Plug 'kana/vim-textobj-user' | Plug 'kana/vim-textobj-function'
Plug 'kana/vim-textobj-user' | Plug 'kana/vim-textobj-indent'
Plug 'kana/vim-textobj-user' | Plug 'kana/vim-textobj-lastpat'
Plug 'kana/vim-textobj-user' | Plug 'kana/vim-textobj-line'
Plug 'kana/vim-textobj-user' | Plug 'sgur/vim-textobj-parameter'
Plug 'kana/vim-textobj-user' | Plug 'paulhybryant/vim-textobj-path'
Plug 'kana/vim-textobj-user' | Plug 'kana/vim-textobj-syntax'
Plug 'kana/vim-textobj-user' | Plug 'jceb/vim-textobj-uri'
Plug 'kana/vim-textobj-user' | Plug 'Julian/vim-textobj-variable-segment'
Plug 'kana/vim-textobj-user' | Plug 'whatyouhide/vim-textobj-xmlattr'

" STYLING
"-----------------------------------------------------------------------------

Plug 'vim-airline/vim-airline'                                                  " Airline down below
Plug 'vim-airline/vim-airline-themes'                                           " Airline theme colors
Plug 'ryanoasis/vim-devicons'
Plug 'NLKNguyen/papercolor-theme'

" WRITING/AUTHORING TOOLS
"-----------------------------------------------------------------------------

Plug 'reedes/vim-pencil' | Plug 'reedes/vim-colors-pencil'                      " Wrapping and punctuation presets for writing (:h pencil)
Plug 'junegunn/limelight.vim'
Plug 'reedes/vim-lexical'                                                       " Thesaurus, dictionary, and spellchecking (:h lexical)
Plug 'reedes/vim-litecorrect'                                                   " Lightweight autocorrection
Plug 'kana/vim-textobj-user'
      \ | Plug 'reedes/vim-textobj-quote', { 'for': ['pandoc', 'html', 'erb'] }                " Text object extension for typographic quotes and sentences
Plug 'kana/vim-textobj-user'
      \ | Plug 'reedes/vim-textobj-sentence', { 'for': ['pandoc'] }
Plug 'junegunn/vim-emoji'                                                       " Emoji helpers

" DEV TOOLS
"-----------------------------------------------------------------------------

if has('nvim')
  function! DoRemote(arg)
    UpdateRemotePlugins
  endfunction
  Plug 'Shougo/deoplete.nvim', { 'do': function('DoRemote') }
endif

Plug 'gabesoft/vim-ags', { 'on': ['Ags'] }                                      " Silver searcher for Vim (:h ags)
Plug 'tpope/vim-commentary'                                                     " Context-aware code comments (:h commentary)
Plug 'mattn/emmet-vim', { 'for': ['html', 'css', 'less', 'scss'] }              " Emmet (:h emmet)
Plug 'cohama/lexima.vim'                                                        " Context-aware auto-closing pairs (:h lexima)
Plug 'terryma/vim-multiple-cursors'                                             " Multiple cursors (:h multiple-cursors)
Plug 'benekastah/neomake'                                                       " Syntax checking (:h neomake)
Plug 'scrooloose/nerdtree'
      \ | Plug 'Xuyuanp/nerdtree-git-plugin', { 'on': ['NERDTreeToggle'] }
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'                                  " Highlight NerdTREE
Plug 'tpope/vim-projectionist'                                                  " Project definition (:h projectionist)
Plug 'tomtom/quickfixsigns_vim'                                                 " Show signs in gutter for interesting lines (:h quickfixsigns) (:h signify)
Plug 'mhinz/vim-signify'
Plug 'tpope/vim-rsi'                                                            " Readline key bindings (:h rsi)
Plug 'tpope/vim-sleuth'                                                         " Automatically change whitespace settings to match any file (:h sleuth)
Plug 'AndrewRadev/sideways.vim', { 'on': ['SidewaysLeft', 'SidewaysRight'] }    " Shift function arguments left or right (:h sideways)
Plug 'tpope/vim-speeddating'                                                    " Use <C-a> and <C-x> to increment and decrement times and dates (:h speedating)
Plug 'tpope/vim-surround'                                                       " Surround text objects
Plug 'pelodelfuego/vim-swoop', { 'on': ['Swoop'] }                              " Helm-like interactive search/replace (:h swoop)
Plug 'majutsushi/tagbar', { 'on': ['TagbarToggle'] }                            " Code object browser (:h tagbar)
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'                             " Snippets (:h ultisnips)
Plug 'mbbill/undotree', { 'on': 'UndotreeToggle' }                              " Interactive undo tree (:h undotree)
Plug 'tpope/vim-unimpaired'                                                     " Pairs of handy bracket mappings (:h unimpaired)

" FILETYPE-SPECIFIC
"-----------------------------------------------------------------------------

" Multiple
Plug 'sheerun/vim-polyglot'
Plug 'Chiel92/vim-autoformat', { 'for': ['css', 'go', 'html', 'javascript', 'scss', 'xml'] }

" HTML
Plug 'othree/html5.vim', { 'for': ['html', 'erb'] }

" JavaScript
Plug 'marijnh/tern_for_vim', { 'for': 'javascript', 'do': 'npm install' }
Plug 'moll/vim-node', { 'for': 'javascript' }
Plug 'heavenshell/vim-jsdoc', { 'for': ['javascript', 'typescript'] }

" SCSS
Plug 'cakebaker/scss-syntax.vim', { 'for': 'scss' }

" tmux
Plug 'tmux-plugins/vim-tmux', { 'for': 'tmux' }

" TypeScript
Plug 'Quramy/tsuquyomi', { 'for': 'typescript' }

" Linting
Plug 'scrooloose/syntastic'

call plug#end()

" vim: set sw=2 ts=2 sts=2 et tw=78 nospell:
